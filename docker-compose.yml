name: awsgoo
services:
  # =========================
  # 1) Eureka (외부포트 8765)
  # =========================
  sc-eureka:
    image: rudals831/project-eureka:0.1.0
    container_name: sc-eureka
    ports:
      - "8765:8761"            # 호스트 8765 -> 컨테이너 8761 (대시보드 외부접속용)
    environment:
      - SERVER_PORT=8761
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info
      - MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8761/actuator/health | grep -q UP || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks: [msa-net]

  # =========================
  # 2) MariaDB (내부전용)
  # =========================
  mariadb:
    image: mariadb:10.11
    container_name: mariadb
    environment:
      MARIADB_ROOT_PASSWORD: root_pass_123!
      MARIADB_DATABASE: project_user
      MARIADB_USER: appuser
      MARIADB_PASSWORD: app_pass_123!
    # 외부에서 직접 붙을 필요 없으면 ports 생략 권장. 내부통신은 'mariadb:3306'으로.
    # ports:
    #   - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL","mariadb-admin ping -h 127.0.0.1 -u${MARIADB_USER} -p${MARIADB_PASSWORD} --silent"]
      interval: 10s
      timeout: 3s
      retries: 30
    volumes:
      - mariadb_data:/var/lib/mysql
    networks: [msa-net]

  # =========================
  # 3) User Service (외부포트 9081)
  # =========================
  sc-user-svc:
    image: rudals831/project-user:0.1.4
    environment:
      - SERVER_PORT=8081
      - SPRING_APPLICATION_NAME=project-user
      # ⬇️ 컨테이너 간 통신은 'sc-eureka:8761'
      - EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE=http://sc-eureka:8761/eureka
      # ⬇️ DB 연결: 반드시 'mariadb' 컨테이너 호스트명으로!
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/project_user
      - SPRING_DATASOURCE_USERNAME=appuser
      - SPRING_DATASOURCE_PASSWORD=app_pass_123!
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
      # JPA 옵션 (필요 시 조정)
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MariaDBDialect
      # Actuator 노출(헬스체크용)
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info
      - MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true
    depends_on:
      sc-eureka: { condition: service_healthy }
      mariadb:   { condition: service_healthy }
    # 외부에서 직접 확인하려면 유지, 게이트웨이만 열거면 주석 처리하고 expose 로만 사용
    ports:
      - "9081:8081"
    # expose:
    #   - "8081"
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8081/actuator/health | grep -q UP || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks: [msa-net]

  # =========================
  # 4) Spring Cloud Gateway (외부포트 9080)
  # =========================
  scg-proxy:
    image: rudals831/project-scg:0.1.3
    environment:
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=sc-gateway
      # ⬇️ 컨테이너 간 통신은 'sc-eureka:8761'
      - EUREKA_CLIENT_SERVICEURL_DEFAULT_ZONE=http://sc-eureka:8761/eureka
      # Discovery Locator 사용 (Eureka 등록명으로 자동 라우팅)
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED=true
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWER_CASE_SERVICE_ID=true
      # Actuator 노출(헬스체크용)
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info
      - MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true
    depends_on:
      sc-eureka:   { condition: service_healthy }
      sc-user-svc: { condition: service_healthy }
    ports:
      - "9080:8080"
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8080/actuator/health | grep -q UP || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks: [msa-net]

networks:
  msa-net:
    driver: bridge

volumes:
  mariadb_data:
